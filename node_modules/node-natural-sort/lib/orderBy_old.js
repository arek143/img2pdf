'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _compare = require('./compare');

var _compare2 = _interopRequireDefault(_compare);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (iteratees) {
  var caseSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return function (collectionA, collectionB) {
    var result = 0;
    for (var _iterator = iteratees, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var iteratee = _ref;

      var key = void 0;
      var order = void 0;
      if (Array.isArray(iteratee)) {
        key = iteratee[0];
        order = iteratee[1];
      } else {
        key = iteratee;
      }
      if (Array.isArray(collectionA) && Array.isArray(collectionB)) {
        key = parseInt(key, 10);
        if (!Number.isNaN(key)) {
          var valueA = collectionA[key];
          var valueB = collectionB[key];
          result = (0, _compare2.default)({ caseSensitive: caseSensitive, order: order })(valueA, valueB);
        }
      } else if (!Array.isArray(collectionA) && !Array.isArray(collectionB) && (typeof collectionA === 'undefined' ? 'undefined' : _typeof(collectionA)) === 'object' && (typeof collectionB === 'undefined' ? 'undefined' : _typeof(collectionB)) === 'object') {
        var _valueA = collectionA[key];
        var _valueB = collectionB[key];
        result = (0, _compare2.default)({ caseSensitive: caseSensitive, order: order })(_valueA, _valueB);
      }
      if (result !== 0) {
        break;
      }
    }
    return result;
  };
};

module.exports = exports['default'];