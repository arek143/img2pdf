'use strict';

exports.__esModule = true;

var _utils = require('./utils');

exports.default = function (collection, iteratees) {
  var caseSensitive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  // TODO: iteratee might also be a lookup function!!!
  var normalizedIteratees = iteratees.map(function (iteratee) {
    return Array.isArray(iteratee) ? iteratee : [iteratee, 'asc'];
  });

  // temporary array holds elements with position and sort-values
  var mappedCollection = collection.map(function (element, index) {
    var values = normalizedIteratees.map(function (iteratee) {
      return element[iteratee[0]];
    }).reduce(function (acc, value) {
      var s = (0, _utils.convertToString)(caseSensitive, value);
      acc.parsedNumber = (0, _utils.parseNumber)(s);
      acc.chunks = (0, _utils.createChunksList)(s);
      return acc;
    }, {});
    return {
      index: index,
      values: values
    };
  });

  // iterate over values and compare values until a != b or last value reached
  mappedCollection.sort(compare);

  return mappedCollection.map(function (element) {
    return collection[element.index];
  });
};

module.exports = exports['default'];